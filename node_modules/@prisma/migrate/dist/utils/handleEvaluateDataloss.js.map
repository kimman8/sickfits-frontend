{
  "version": 3,
  "sources": ["../../src/utils/handleEvaluateDataloss.ts"],
  "sourcesContent": ["import chalk from 'chalk'\nimport { getCommandWithExecutor } from '@prisma/sdk'\nimport { MigrationFeedback } from '../types'\n\nexport function handleUnexecutableSteps(\n  unexecutableSteps: MigrationFeedback[],\n  createOnly = false,\n) {\n  if (unexecutableSteps && unexecutableSteps.length > 0) {\n    const messages: string[] = []\n    messages.push(\n      `${chalk.bold.red('\\n\u26A0\uFE0F We found changes that cannot be executed:\\n')}`,\n    )\n    for (const item of unexecutableSteps) {\n      messages.push(`${chalk(`  \u2022 Step ${item.stepIndex} ${item.message}`)}`)\n    }\n    console.info() // empty line\n\n    // If create only, allow to continue\n    if (createOnly) {\n      console.error(`${messages.join('\\n')}\\n`)\n      return undefined\n    } else {\n      return `${messages.join('\\n')}\n\nYou can use ${getCommandWithExecutor(\n        'prisma migrate dev --create-only',\n      )} to create the migration file, and manually modify it to address the underlying issue(s).\nThen run ${getCommandWithExecutor(\n        'prisma migrate dev',\n      )} to apply it and verify it works.\\n`\n    }\n  }\n\n  return undefined\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAClB,iBAAuC;AAGhC,iCACL,mBACA,aAAa,OACb;AACA,MAAI,qBAAqB,kBAAkB,SAAS,GAAG;AACrD,UAAM,WAAqB;AAC3B,aAAS,KACP,GAAG,qBAAM,KAAK,IAAI;AAEpB,eAAW,QAAQ,mBAAmB;AACpC,eAAS,KAAK,GAAG,0BAAM,iBAAY,KAAK,aAAa,KAAK;AAAA;AAE5D,YAAQ;AAGR,QAAI,YAAY;AACd,cAAQ,MAAM,GAAG,SAAS,KAAK;AAAA;AAC/B,aAAO;AAAA,WACF;AACL,aAAO,GAAG,SAAS,KAAK;AAAA;AAAA,cAEhB,uCACN;AAAA,WAEG,uCACH;AAAA;AAAA;AAAA;AAKN,SAAO;AAAA;",
  "names": []
}
