var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
__export(exports, {
  printDatasource: () => printDatasource
});
var import_ensureDatabaseExists = __toModule(require("../utils/ensureDatabaseExists"));
var import_chalk = __toModule(require("chalk"));
async function printDatasource(schemaPath) {
  const dbInfo = await (0, import_ensureDatabaseExists.getDbInfo)(schemaPath);
  if (dbInfo.dbType) {
    if (dbInfo.dbType === "PostgreSQL" && dbInfo.dbName === void 0) {
      dbInfo.dbName = "postgres";
    }
    if (dbInfo.dbType === "SQL Server") {
      console.info(import_chalk.default.dim(`Datasource "${dbInfo.name}" - SQL Server`));
    } else {
      console.info(import_chalk.default.dim(`Datasource "${dbInfo.name}": ${dbInfo.dbType} ${dbInfo.schemaWord} "${dbInfo.dbName}"${dbInfo.schema ? `, schema "${dbInfo.schema}"` : ""} at "${dbInfo.dbLocation}"`));
    }
  } else {
    console.info(import_chalk.default.dim(`Datasource "${dbInfo.name}"`));
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  printDatasource
});
