/** @jsxRuntime classic */
/** @jsx jsx */
import { BoxProps, jsx, ManagedChangeHandler } from '@keystone-ui/core';
import { SizeKey, WidthKey } from './hooks/segmentedControl';
declare type Index = number;
declare type SegmentedControlProps = {
    /** Whether the selected control indicator should animate its movement. */
    animate?: boolean;
    /** Whether the controls should take up the full width of their container. */
    fill?: boolean;
    /** Provide an initial index for an uncontrolled segmented control. */
    initialIndex?: Index;
    /** Function to be called when one of the segments is selected. */
    onChange?: ManagedChangeHandler<Index>;
    /** Provide labels for each segment. */
    segments: string[];
    /** The the selected index of the segmented control. */
    selectedIndex?: Index;
    /** The size of the controls. */
    size?: SizeKey;
    /** The width of the controls. */
    width?: WidthKey;
} & BoxProps;
export declare const SegmentedControl: ({ animate, fill, initialIndex: initialIndexProp, onChange: onChangeProp, segments, size, width, selectedIndex: selectedIndexProp, ...props }: SegmentedControlProps) => jsx.JSX.Element;
export {};
