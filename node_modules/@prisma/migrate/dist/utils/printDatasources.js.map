{
  "version": 3,
  "sources": ["../../src/utils/printDatasources.ts"],
  "sourcesContent": ["// This is copied from prisma-client-js/runtime/utils. It needs to be moved into a separate package\nimport indent from 'indent-string'\n\nexport type ConnectorType =\n  | 'mysql'\n  | 'mongodb'\n  | 'sqlite'\n  | 'postgresql'\n  | 'sqlserver'\n  | 'jdbc:sqlserver'\n\nexport interface GeneratorConfig {\n  name: string\n  output: string | null\n  provider: string\n  config: Record<string, string>\n}\n\nexport type Datasource =\n  | string\n  | {\n      url: string\n      [key: string]: any | undefined\n    }\n\nexport interface InternalDatasource {\n  name: string\n  provider: ConnectorType\n  url: string\n  config: any\n}\n\nexport function printDatasources(\n  internalDatasources: InternalDatasource[],\n): string {\n  return internalDatasources\n    .map((d) => String(new InternalDataSourceClass(d)))\n    .join('\\n\\n')\n}\n\nconst tab = 2\n\nclass InternalDataSourceClass {\n  constructor(private readonly dataSource: InternalDatasource) {}\n\n  public toString(): string {\n    const { dataSource } = this\n    const obj = {\n      provider: dataSource.provider,\n      url: dataSource.url,\n    }\n    if (dataSource.config && typeof dataSource.config === 'object') {\n      Object.assign(obj, dataSource.config)\n    }\n    return `datasource ${dataSource.name} {\n${indent(printDatamodelObject(obj), tab)}\n}`\n  }\n}\n\nexport function printDatamodelObject(obj: any): string {\n  const maxLength = Object.keys(obj).reduce(\n    (max, curr) => Math.max(max, curr.length),\n    0,\n  )\n  return Object.entries(obj)\n    .map(\n      ([key, value]: [string, any]) =>\n        `${key.padEnd(maxLength)} = ${\n          typeof value === 'object' && value && value.value\n            ? JSON.stringify(value.value)\n            : JSON.stringify(value)\n        }`,\n    )\n    .join('\\n')\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA,2BAAmB;AA+BZ,0BACL,qBACQ;AACR,SAAO,oBACJ,IAAI,CAAC,MAAM,OAAO,IAAI,wBAAwB,KAC9C,KAAK;AAAA;AAGV,MAAM,MAAM;AAEZ,8BAA8B;AAAA,EAC5B,YAA6B,YAAgC;AAAhC;AAAA;AAAA,EAEtB,WAAmB;AACxB,UAAM,EAAE,eAAe;AACvB,UAAM,MAAM;AAAA,MACV,UAAU,WAAW;AAAA,MACrB,KAAK,WAAW;AAAA;AAElB,QAAI,WAAW,UAAU,OAAO,WAAW,WAAW,UAAU;AAC9D,aAAO,OAAO,KAAK,WAAW;AAAA;AAEhC,WAAO,cAAc,WAAW;AAAA,EAClC,kCAAO,qBAAqB,MAAM;AAAA;AAAA;AAAA;AAK7B,8BAA8B,KAAkB;AACrD,QAAM,YAAY,OAAO,KAAK,KAAK,OACjC,CAAC,KAAK,SAAS,KAAK,IAAI,KAAK,KAAK,SAClC;AAEF,SAAO,OAAO,QAAQ,KACnB,IACC,CAAC,CAAC,KAAK,WACL,GAAG,IAAI,OAAO,gBACZ,OAAO,UAAU,YAAY,SAAS,MAAM,QACxC,KAAK,UAAU,MAAM,SACrB,KAAK,UAAU,UAGxB,KAAK;AAAA;",
  "names": []
}
