import { NextFieldType, CacheHint, IndividualFieldAccessControl, BaseGeneratedListTypes, ItemRootValue, graphql, KeystoneContext, FieldReadItemAccessArgs } from '../../../types';
import { ResolvedDBField } from '../resolve-relationships';
import { InitialisedList } from '../types-for-lists';
export declare function outputTypeField(output: NextFieldType['output'], dbField: ResolvedDBField, cacheHint: CacheHint | undefined, access: IndividualFieldAccessControl<FieldReadItemAccessArgs<BaseGeneratedListTypes>>, listKey: string, fieldKey: string, lists: Record<string, InitialisedList>): import("@graphql-ts/schema").Field<ItemRootValue, any, graphql.OutputType, string, KeystoneContext>;
