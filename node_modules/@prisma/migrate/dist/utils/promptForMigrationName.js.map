{
  "version": 3,
  "sources": ["../../src/utils/promptForMigrationName.ts"],
  "sourcesContent": ["import { prompt } from 'prompts'\nimport { isCi } from '@prisma/sdk'\nimport slugify from '@sindresorhus/slugify'\n\ntype getMigratioNameOutput = {\n  name?: string\n  userCancelled?: string\n}\n\nexport async function getMigrationName(\n  name?: string,\n): Promise<getMigratioNameOutput> {\n  // Truncate if longer\n  const maxMigrationNameLength = 200\n\n  if (name) {\n    return {\n      name: slugify(name, { separator: '_' }).substring(\n        0,\n        maxMigrationNameLength,\n      ),\n    }\n  }\n  // We use prompts.inject() for testing in our CI\n  else if (isCi() && Boolean(prompt._injected?.length) === false) {\n    return {\n      name: '',\n    }\n  }\n\n  const response = await prompt({\n    type: 'text',\n    name: 'name',\n    message: `Enter a name for the new migration:`,\n  })\n\n  if (!('name' in response)) {\n    return {\n      userCancelled: 'Canceled by user.',\n    }\n  }\n\n  return {\n    name:\n      slugify(response.name, { separator: '_' }).substring(\n        0,\n        maxMigrationNameLength,\n      ) || '',\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,qBAAuB;AACvB,iBAAqB;AACrB,qBAAoB;AAOpB,gCACE,MACgC;AAXlC;AAaE,QAAM,yBAAyB;AAE/B,MAAI,MAAM;AACR,WAAO;AAAA,MACL,MAAM,4BAAQ,MAAM,EAAE,WAAW,OAAO,UACtC,GACA;AAAA;AAAA,aAKG,0BAAU,QAAQ,4BAAO,cAAP,mBAAkB,YAAY,OAAO;AAC9D,WAAO;AAAA,MACL,MAAM;AAAA;AAAA;AAIV,QAAM,WAAW,MAAM,2BAAO;AAAA,IAC5B,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS;AAAA;AAGX,MAAI,CAAE,WAAU,WAAW;AACzB,WAAO;AAAA,MACL,eAAe;AAAA;AAAA;AAInB,SAAO;AAAA,IACL,MACE,4BAAQ,SAAS,MAAM,EAAE,WAAW,OAAO,UACzC,GACA,2BACG;AAAA;AAAA;",
  "names": []
}
