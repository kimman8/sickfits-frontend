var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
__export(exports, {
  getMigrationName: () => getMigrationName
});
var import_prompts = __toModule(require("prompts"));
var import_sdk = __toModule(require("@prisma/sdk"));
var import_slugify = __toModule(require("@sindresorhus/slugify"));
async function getMigrationName(name) {
  var _a;
  const maxMigrationNameLength = 200;
  if (name) {
    return {
      name: (0, import_slugify.default)(name, { separator: "_" }).substring(0, maxMigrationNameLength)
    };
  } else if ((0, import_sdk.isCi)() && Boolean((_a = import_prompts.prompt._injected) == null ? void 0 : _a.length) === false) {
    return {
      name: ""
    };
  }
  const response = await (0, import_prompts.prompt)({
    type: "text",
    name: "name",
    message: `Enter a name for the new migration:`
  });
  if (!("name" in response)) {
    return {
      userCancelled: "Canceled by user."
    };
  }
  return {
    name: (0, import_slugify.default)(response.name, { separator: "_" }).substring(0, maxMigrationNameLength) || ""
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getMigrationName
});
