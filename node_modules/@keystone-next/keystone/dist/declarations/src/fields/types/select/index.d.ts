import { BaseGeneratedListTypes, FieldDefaultValue, FieldTypeFunc, CommonFieldConfig } from '../../../types';
export declare type SelectFieldConfig<TGeneratedListTypes extends BaseGeneratedListTypes> = CommonFieldConfig<TGeneratedListTypes> & ({
    options: {
        label: string;
        value: string;
    }[];
    dataType?: 'string' | 'enum';
    defaultValue?: FieldDefaultValue<string, TGeneratedListTypes>;
} | {
    options: {
        label: string;
        value: number;
    }[];
    dataType: 'integer';
    defaultValue?: FieldDefaultValue<number, TGeneratedListTypes>;
}) & {
    ui?: {
        displayMode?: 'select' | 'segmented-control';
    };
    isRequired?: boolean;
    isIndexed?: boolean | 'unique';
};
export declare const select: <TGeneratedListTypes extends BaseGeneratedListTypes>({ isIndexed, ui: { displayMode, ...ui }, isRequired, defaultValue, ...config }: SelectFieldConfig<TGeneratedListTypes>) => FieldTypeFunc;
