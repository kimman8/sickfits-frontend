var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var import_sdk = __toModule(require("@prisma/sdk"));
var import_handlePanic = __toModule(require("../utils/handlePanic"));
var import_path = __toModule(require("path"));
async function main() {
  const error = new import_sdk.RustPanic("Some error message!\n".repeat(23), "", void 0, import_sdk.ErrorArea.LIFT_CLI, import_path.default.resolve(import_path.default.join("fixtures", "blog", "prisma", "schema.prisma")));
  const packageJsonVersion = "0.0.0";
  const prismaVersion = "734ab53bd8e2cadf18b8b71cb53bf2d2bed46517";
  await (0, import_handlePanic.handlePanic)(error, packageJsonVersion, prismaVersion, "something-test").catch((e) => {
    console.log(e);
  }).finally(() => {
    process.exit(1);
  });
}
void main();
