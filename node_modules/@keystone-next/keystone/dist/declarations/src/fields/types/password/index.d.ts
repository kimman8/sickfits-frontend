import { BaseGeneratedListTypes, FieldDefaultValue, FieldTypeFunc, CommonFieldConfig } from '../../../types';
declare type PasswordFieldConfig<TGeneratedListTypes extends BaseGeneratedListTypes> = CommonFieldConfig<TGeneratedListTypes> & {
    /**
     * @default 8
     */
    minLength?: number;
    /**
     * @default 10
     */
    workFactor?: number;
    rejectCommon?: boolean;
    bcrypt?: Pick<typeof import('bcryptjs'), 'compare' | 'compareSync' | 'hash' | 'hashSync'>;
    defaultValue?: FieldDefaultValue<string, TGeneratedListTypes>;
    isRequired?: boolean;
};
export declare const password: <TGeneratedListTypes extends BaseGeneratedListTypes>({ bcrypt, minLength, workFactor, rejectCommon, isRequired, defaultValue, ...config }?: PasswordFieldConfig<TGeneratedListTypes>) => FieldTypeFunc;
export {};
