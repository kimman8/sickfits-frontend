{
  "version": 3,
  "sources": ["../../src/utils/printDatasource.ts"],
  "sourcesContent": ["import { getDbInfo } from '../utils/ensureDatabaseExists'\nimport chalk from 'chalk'\n\nexport async function printDatasource(schemaPath: string): Promise<void> {\n  const dbInfo = await getDbInfo(schemaPath)\n\n  if (dbInfo.dbType) {\n    if (dbInfo.dbType === 'PostgreSQL' && dbInfo.dbName === undefined) {\n      dbInfo.dbName = 'postgres'\n    }\n\n    if (dbInfo.dbType === 'SQL Server') {\n      console.info(chalk.dim(`Datasource \"${dbInfo.name}\" - SQL Server`))\n    } else {\n      console.info(\n        chalk.dim(\n          `Datasource \"${dbInfo.name}\": ${dbInfo.dbType} ${\n            dbInfo.schemaWord\n          } \"${dbInfo.dbName}\"${\n            dbInfo.schema ? `, schema \"${dbInfo.schema}\"` : ''\n          } at \"${dbInfo.dbLocation}\"`,\n        ),\n      )\n    }\n  } else {\n    console.info(chalk.dim(`Datasource \"${dbInfo.name}\"`))\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,kCAA0B;AAC1B,mBAAkB;AAElB,+BAAsC,YAAmC;AACvE,QAAM,SAAS,MAAM,2CAAU;AAE/B,MAAI,OAAO,QAAQ;AACjB,QAAI,OAAO,WAAW,gBAAgB,OAAO,WAAW,QAAW;AACjE,aAAO,SAAS;AAAA;AAGlB,QAAI,OAAO,WAAW,cAAc;AAClC,cAAQ,KAAK,qBAAM,IAAI,eAAe,OAAO;AAAA,WACxC;AACL,cAAQ,KACN,qBAAM,IACJ,eAAe,OAAO,UAAU,OAAO,UACrC,OAAO,eACJ,OAAO,UACV,OAAO,SAAS,aAAa,OAAO,YAAY,UAC1C,OAAO;AAAA;AAAA,SAIhB;AACL,YAAQ,KAAK,qBAAM,IAAI,eAAe,OAAO;AAAA;AAAA;",
  "names": []
}
