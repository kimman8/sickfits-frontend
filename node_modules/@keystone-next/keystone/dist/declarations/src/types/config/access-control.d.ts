import type { MaybePromise } from '../utils';
import type { BaseGeneratedListTypes, KeystoneContext } from '..';
declare type BaseAccessArgs = {
    session: any;
    listKey: string;
    context: KeystoneContext;
};
declare type FilterOutput<GeneratedListTypes extends BaseGeneratedListTypes> = boolean | GeneratedListTypes['inputs']['where'];
export declare type ListFilterAccessControl<Operation extends 'query' | 'update' | 'delete', GeneratedListTypes extends BaseGeneratedListTypes> = (args: BaseAccessArgs & {
    operation: Operation;
}) => MaybePromise<FilterOutput<GeneratedListTypes>>;
declare type CreateItemAccessArgs<GeneratedListTypes extends BaseGeneratedListTypes> = BaseAccessArgs & {
    operation: 'create';
    /**
     * The input passed in from the GraphQL API
     */
    originalInput: GeneratedListTypes['inputs']['create'];
};
export declare type CreateListItemAccessControl<GeneratedListTypes extends BaseGeneratedListTypes> = (args: CreateItemAccessArgs<GeneratedListTypes>) => MaybePromise<boolean>;
declare type UpdateItemAccessArgs<GeneratedListTypes extends BaseGeneratedListTypes> = BaseAccessArgs & {
    operation: 'update';
    /**
     * The item being updated
     */
    item: GeneratedListTypes['backing'];
    /**
     * The input passed in from the GraphQL API
     */
    originalInput: GeneratedListTypes['inputs']['update'];
};
export declare type UpdateListItemAccessControl<GeneratedListTypes extends BaseGeneratedListTypes> = (args: UpdateItemAccessArgs<GeneratedListTypes>) => MaybePromise<boolean>;
declare type DeleteItemAccessArgs<GeneratedListTypes extends BaseGeneratedListTypes> = BaseAccessArgs & {
    operation: 'delete';
    /**
     * The item being deleted
     */
    item: GeneratedListTypes['backing'];
};
export declare type DeleteListItemAccessControl<GeneratedListTypes extends BaseGeneratedListTypes> = (args: DeleteItemAccessArgs<GeneratedListTypes>) => MaybePromise<boolean>;
export declare type ListOperationAccessControl<Operation extends 'create' | 'query' | 'update' | 'delete'> = (args: BaseAccessArgs & {
    operation: Operation;
}) => MaybePromise<boolean>;
export declare type ListAccessControl<GeneratedListTypes extends BaseGeneratedListTypes> = {
    operation?: {
        query?: ListOperationAccessControl<'query'>;
        create?: ListOperationAccessControl<'create'>;
        update?: ListOperationAccessControl<'update'>;
        delete?: ListOperationAccessControl<'delete'>;
    };
    filter?: {
        query?: ListFilterAccessControl<'query', GeneratedListTypes>;
        update?: ListFilterAccessControl<'update', GeneratedListTypes>;
        delete?: ListFilterAccessControl<'delete', GeneratedListTypes>;
    };
    item?: {
        create?: CreateListItemAccessControl<GeneratedListTypes>;
        update?: UpdateListItemAccessControl<GeneratedListTypes>;
        delete?: DeleteListItemAccessControl<GeneratedListTypes>;
    };
};
export declare type IndividualFieldAccessControl<Args> = (args: Args) => MaybePromise<boolean>;
export declare type FieldCreateItemAccessArgs<GeneratedListTypes extends BaseGeneratedListTypes> = CreateItemAccessArgs<GeneratedListTypes> & {
    fieldKey: string;
};
export declare type FieldReadItemAccessArgs<GeneratedListTypes extends BaseGeneratedListTypes> = BaseAccessArgs & {
    operation: 'read';
    fieldKey: string;
    item: GeneratedListTypes['backing'];
};
export declare type FieldUpdateItemAccessArgs<GeneratedListTypes extends BaseGeneratedListTypes> = UpdateItemAccessArgs<GeneratedListTypes> & {
    fieldKey: string;
};
export declare type FieldAccessControl<GeneratedListTypes extends BaseGeneratedListTypes> = {
    read?: IndividualFieldAccessControl<FieldReadItemAccessArgs<GeneratedListTypes>>;
    create?: IndividualFieldAccessControl<FieldCreateItemAccessArgs<GeneratedListTypes>>;
    update?: IndividualFieldAccessControl<FieldUpdateItemAccessArgs<GeneratedListTypes>>;
} | IndividualFieldAccessControl<FieldCreateItemAccessArgs<GeneratedListTypes> | FieldReadItemAccessArgs<GeneratedListTypes> | FieldUpdateItemAccessArgs<GeneratedListTypes>>;
export {};
